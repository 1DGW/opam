opam-version: "2.0"
maintainer: "dev@clarus.me"
homepage: "https://github.com/coq-contribs/lc"
license: "LGPL 2"
build: [
  ["coq_makefile" "-f" "Make" "-o" "Makefile"]
  [make "-j%{jobs}%"]
  [make "install"]
]
remove: ["rm" "-R" "%{lib}%/coq/user-contrib/lc"]
depends: [
  "ocaml"
  "coq" {= "dev"}
]
tags: [ "keyword:module" "keyword:monads" "keyword:category theory" "keyword:lambda calculus" "keyword:higher order syntax" "category:Computer Science/Lambda Calculi" "date:2008-09-9" ]
authors: [ "Andr√© Hirschowitz <ah@math.unice.fr>" "Marco Maggesi <maggesi@math.unifi.it>" ]
synopsis: "Modules over monads and lambda-calculi."
description: """
We define a notion of module over a monad and use it to
propose a new definition (or semantics) for abstract
syntax (with binding constructions). Using our notion of
module, we build a category of `exponential' monads,
which can be understood as the category of
lambda-calculi, and prove that it has an initial object
(the pure untyped lambda-calculus)."""
flags: light-uninstall
url {
  src: "git+https://github.com/coq-contribs/lc.git#master"
}
